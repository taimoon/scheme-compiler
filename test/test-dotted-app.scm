(define (writeln x) (write x) (newline))
(let ()
(writeln (+ . (2 3)))
)

(let ()
(define (f . xy) (+ . xy))
(writeln (f 2 5))
)

(let ()
(define (sum . xs)
  (let loop ((acm 0) (xs xs))
    (if (pair? xs)
        (loop (+ acm (car xs)) (cdr xs))
        acm)))
(define (f . x) (sum 2 3 . x))
(define (g x y) (sum . (x y)))
(writeln (f 5 7))
(writeln (g 2 29))
)